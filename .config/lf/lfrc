cmd open ${{
  case $(file --mime-type $f -b) in
    application/pdf)
      setsid -f zathura $fx >/dev/null 2>&1 ;;
    
    image/vnd.djvu|application/octet-stream)
      setsid -f mupdf $fx >/dev/null 2>&1 ;;
    
    text/*|application/*)
      $EDITOR $fx ;;  # Open with editor (nvim if EDITOR is set)

    application/vnd*|application/epub*)
      setsid -f zathura $fx >/dev/null 2>&1 ;;  # use zathura for epub and other document types
    
    *)
      setsid -f ${editor:-nvim} $f >/dev/null 2>&1 ;;  # default to nvim or editor for other files
  esac
}}

cmd mkfile ${{
	printf "File Name: "
	read ans
	$EDITOR $ans
}}

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header="Jump to location")"
    if [ -n "$res" ]; then
        if [ -d "$res" ]; then
            cmd="cd"
        else
            cmd="select"
        fi
        res="$(printf '%s' "$res" | sed 's/\\/\\\\/g;s/"/\\"/g')"
        lf -remote "send $id $cmd \"$res\""
    fi
}}

cmd delete ${{
	clear; tput cup $(($(tput lines)/3)); tput bold
	set -f
	printf "%s\n\t" "$fx"
	printf "delete?[y/N]"
	read ans
	[ $ans = "y" ] && rm -rf -- $fx
}}
cmd extract ${{
  case "$f" in
      *.zip) unzip "$f" ;;
      *.tar.gz) tar -xzvf "$f" ;;
      *.tar.bz2) tar -xjvf "$f" ;;
      *.tar) tar -xvf "$f" ;;
      *) echo "Unsupported format" ;;
  esac
}}
cmd fzf_search ${{
    res="$( \
        RG_PREFIX="rg --column --line-number --no-heading --color=always \
            --smart-case "
        FZF_DEFAULT_COMMAND="$RG_PREFIX ''" \
            fzf --bind "change:reload:$RG_PREFIX {q} || true" \
            --ansi --layout=reverse --header 'Search in files' \
            | cut -d':' -f1
    )"
    [ ! -z "$res" ] && lf -remote "send $id select \"$res\""
}}
map gs :fzf_search

set ignorecase true
set drawbox
set keep
set hidden
set icons
set number
set relativenumber
set shell zsh

set previewer ctpv
set cleaner ctpvclear

map <c-f> :fzf_jump
map r rename
map au extract
map <enter> open
map D delete
map M mkfile
